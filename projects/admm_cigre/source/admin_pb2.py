# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: admin.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='admin.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0b\x61\x64min.proto\">\n\tCommReply\x12 \n\x06status\x18\x01 \x01(\x0e\x32\x10.OperationStatus\x12\x0f\n\x07message\x18\x02 \x01(\t\"\x0e\n\x0c\x45mptyRequest\" \n\x0c\x41gentRequest\x12\x10\n\x08\x61gent_id\x18\x01 \x01(\r\"i\n\x0b\x41\x44MMResults\x12\x10\n\x08\x61gent_id\x18\x01 \x01(\r\x12\x14\n\x0c\x61vg_opt_time\x18\x02 \x01(\x02\x12\x14\n\x0c\x61vg_rpc_time\x18\x03 \x01(\x02\x12\r\n\x05p_ref\x18\x04 \x01(\x02\x12\r\n\x05q_ref\x18\x05 \x01(\x02\"u\n\x0cMeasurements\x12\x10\n\x08\x61gent_id\x18\x01 \x01(\r\x12\x15\n\ravg_opal_time\x18\x02 \x01(\x02\x12\x0e\n\x06p_meas\x18\x03 \x01(\x02\x12\x0e\n\x06q_meas\x18\x04 \x01(\x02\x12\x0e\n\x06v_meas\x18\x05 \x01(\x02\x12\x0c\n\x04trip\x18\x06 \x01(\x02\"0\n\x0eGenericMessage\x12\x10\n\x08\x61gent_id\x18\x01 \x01(\r\x12\x0c\n\x04text\x18\x02 \x01(\t**\n\x0fOperationStatus\x12\x0b\n\x07SUCCESS\x10\x00\x12\n\n\x06\x46\x41ILED\x10\x01\x32\xb7\x02\n\x05\x41\x64min\x12+\n\x0c\x61gent_online\x12\r.AgentRequest\x1a\n.CommReply\"\x00\x12,\n\ragent_offline\x12\r.AgentRequest\x1a\n.CommReply\"\x00\x12\x31\n\x12\x61gent_started_admm\x12\r.AgentRequest\x1a\n.CommReply\"\x00\x12\x31\n\x13\x61gent_finished_admm\x12\x0c.ADMMResults\x1a\n.CommReply\"\x00\x12\x31\n\x12\x61gent_measurements\x12\r.Measurements\x1a\n.CommReply\"\x00\x12:\n\x19\x61gent_general_use_message\x12\x0f.GenericMessage\x1a\n.CommReply\"\x00\x62\x06proto3')
)

_OPERATIONSTATUS = _descriptor.EnumDescriptor(
  name='OperationStatus',
  full_name='OperationStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=405,
  serialized_end=447,
)
_sym_db.RegisterEnumDescriptor(_OPERATIONSTATUS)

OperationStatus = enum_type_wrapper.EnumTypeWrapper(_OPERATIONSTATUS)
SUCCESS = 0
FAILED = 1



_COMMREPLY = _descriptor.Descriptor(
  name='CommReply',
  full_name='CommReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='CommReply.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='CommReply.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15,
  serialized_end=77,
)


_EMPTYREQUEST = _descriptor.Descriptor(
  name='EmptyRequest',
  full_name='EmptyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=79,
  serialized_end=93,
)


_AGENTREQUEST = _descriptor.Descriptor(
  name='AgentRequest',
  full_name='AgentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='AgentRequest.agent_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=127,
)


_ADMMRESULTS = _descriptor.Descriptor(
  name='ADMMResults',
  full_name='ADMMResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='ADMMResults.agent_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='avg_opt_time', full_name='ADMMResults.avg_opt_time', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='avg_rpc_time', full_name='ADMMResults.avg_rpc_time', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='p_ref', full_name='ADMMResults.p_ref', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='q_ref', full_name='ADMMResults.q_ref', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=129,
  serialized_end=234,
)


_MEASUREMENTS = _descriptor.Descriptor(
  name='Measurements',
  full_name='Measurements',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='Measurements.agent_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='avg_opal_time', full_name='Measurements.avg_opal_time', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='p_meas', full_name='Measurements.p_meas', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='q_meas', full_name='Measurements.q_meas', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='v_meas', full_name='Measurements.v_meas', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='trip', full_name='Measurements.trip', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=236,
  serialized_end=353,
)


_GENERICMESSAGE = _descriptor.Descriptor(
  name='GenericMessage',
  full_name='GenericMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='GenericMessage.agent_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='text', full_name='GenericMessage.text', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=355,
  serialized_end=403,
)

_COMMREPLY.fields_by_name['status'].enum_type = _OPERATIONSTATUS
DESCRIPTOR.message_types_by_name['CommReply'] = _COMMREPLY
DESCRIPTOR.message_types_by_name['EmptyRequest'] = _EMPTYREQUEST
DESCRIPTOR.message_types_by_name['AgentRequest'] = _AGENTREQUEST
DESCRIPTOR.message_types_by_name['ADMMResults'] = _ADMMRESULTS
DESCRIPTOR.message_types_by_name['Measurements'] = _MEASUREMENTS
DESCRIPTOR.message_types_by_name['GenericMessage'] = _GENERICMESSAGE
DESCRIPTOR.enum_types_by_name['OperationStatus'] = _OPERATIONSTATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CommReply = _reflection.GeneratedProtocolMessageType('CommReply', (_message.Message,), dict(
  DESCRIPTOR = _COMMREPLY,
  __module__ = 'admin_pb2'
  # @@protoc_insertion_point(class_scope:CommReply)
  ))
_sym_db.RegisterMessage(CommReply)

EmptyRequest = _reflection.GeneratedProtocolMessageType('EmptyRequest', (_message.Message,), dict(
  DESCRIPTOR = _EMPTYREQUEST,
  __module__ = 'admin_pb2'
  # @@protoc_insertion_point(class_scope:EmptyRequest)
  ))
_sym_db.RegisterMessage(EmptyRequest)

AgentRequest = _reflection.GeneratedProtocolMessageType('AgentRequest', (_message.Message,), dict(
  DESCRIPTOR = _AGENTREQUEST,
  __module__ = 'admin_pb2'
  # @@protoc_insertion_point(class_scope:AgentRequest)
  ))
_sym_db.RegisterMessage(AgentRequest)

ADMMResults = _reflection.GeneratedProtocolMessageType('ADMMResults', (_message.Message,), dict(
  DESCRIPTOR = _ADMMRESULTS,
  __module__ = 'admin_pb2'
  # @@protoc_insertion_point(class_scope:ADMMResults)
  ))
_sym_db.RegisterMessage(ADMMResults)

Measurements = _reflection.GeneratedProtocolMessageType('Measurements', (_message.Message,), dict(
  DESCRIPTOR = _MEASUREMENTS,
  __module__ = 'admin_pb2'
  # @@protoc_insertion_point(class_scope:Measurements)
  ))
_sym_db.RegisterMessage(Measurements)

GenericMessage = _reflection.GeneratedProtocolMessageType('GenericMessage', (_message.Message,), dict(
  DESCRIPTOR = _GENERICMESSAGE,
  __module__ = 'admin_pb2'
  # @@protoc_insertion_point(class_scope:GenericMessage)
  ))
_sym_db.RegisterMessage(GenericMessage)



_ADMIN = _descriptor.ServiceDescriptor(
  name='Admin',
  full_name='Admin',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=450,
  serialized_end=761,
  methods=[
  _descriptor.MethodDescriptor(
    name='agent_online',
    full_name='Admin.agent_online',
    index=0,
    containing_service=None,
    input_type=_AGENTREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='agent_offline',
    full_name='Admin.agent_offline',
    index=1,
    containing_service=None,
    input_type=_AGENTREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='agent_started_admm',
    full_name='Admin.agent_started_admm',
    index=2,
    containing_service=None,
    input_type=_AGENTREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='agent_finished_admm',
    full_name='Admin.agent_finished_admm',
    index=3,
    containing_service=None,
    input_type=_ADMMRESULTS,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='agent_measurements',
    full_name='Admin.agent_measurements',
    index=4,
    containing_service=None,
    input_type=_MEASUREMENTS,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='agent_general_use_message',
    full_name='Admin.agent_general_use_message',
    index=5,
    containing_service=None,
    input_type=_GENERICMESSAGE,
    output_type=_COMMREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ADMIN)

DESCRIPTOR.services_by_name['Admin'] = _ADMIN

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class AdminStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.agent_online = channel.unary_unary(
          '/Admin/agent_online',
          request_serializer=AgentRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.agent_offline = channel.unary_unary(
          '/Admin/agent_offline',
          request_serializer=AgentRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.agent_started_admm = channel.unary_unary(
          '/Admin/agent_started_admm',
          request_serializer=AgentRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.agent_finished_admm = channel.unary_unary(
          '/Admin/agent_finished_admm',
          request_serializer=ADMMResults.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.agent_measurements = channel.unary_unary(
          '/Admin/agent_measurements',
          request_serializer=Measurements.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.agent_general_use_message = channel.unary_unary(
          '/Admin/agent_general_use_message',
          request_serializer=GenericMessage.SerializeToString,
          response_deserializer=CommReply.FromString,
          )


  class AdminServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def agent_online(self, request, context):
      """method that the agent calls when it gets online
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def agent_offline(self, request, context):
      """method that the agent calls when it gets offline
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def agent_started_admm(self, request, context):
      """method that the agent calls when it starts the admm algorithm
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def agent_finished_admm(self, request, context):
      """method that the agent calls when it finishes the admm algorithm
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def agent_measurements(self, request, context):
      """method that the agent calls periodically to send its state to the administrator
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def agent_general_use_message(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'agent_online': grpc.unary_unary_rpc_method_handler(
            servicer.agent_online,
            request_deserializer=AgentRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'agent_offline': grpc.unary_unary_rpc_method_handler(
            servicer.agent_offline,
            request_deserializer=AgentRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'agent_started_admm': grpc.unary_unary_rpc_method_handler(
            servicer.agent_started_admm,
            request_deserializer=AgentRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'agent_finished_admm': grpc.unary_unary_rpc_method_handler(
            servicer.agent_finished_admm,
            request_deserializer=ADMMResults.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'agent_measurements': grpc.unary_unary_rpc_method_handler(
            servicer.agent_measurements,
            request_deserializer=Measurements.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'agent_general_use_message': grpc.unary_unary_rpc_method_handler(
            servicer.agent_general_use_message,
            request_deserializer=GenericMessage.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'Admin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaAdminServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def agent_online(self, request, context):
      """method that the agent calls when it gets online
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def agent_offline(self, request, context):
      """method that the agent calls when it gets offline
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def agent_started_admm(self, request, context):
      """method that the agent calls when it starts the admm algorithm
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def agent_finished_admm(self, request, context):
      """method that the agent calls when it finishes the admm algorithm
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def agent_measurements(self, request, context):
      """method that the agent calls periodically to send its state to the administrator
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def agent_general_use_message(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAdminStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def agent_online(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """method that the agent calls when it gets online
      """
      raise NotImplementedError()
    agent_online.future = None
    def agent_offline(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """method that the agent calls when it gets offline
      """
      raise NotImplementedError()
    agent_offline.future = None
    def agent_started_admm(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """method that the agent calls when it starts the admm algorithm
      """
      raise NotImplementedError()
    agent_started_admm.future = None
    def agent_finished_admm(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """method that the agent calls when it finishes the admm algorithm
      """
      raise NotImplementedError()
    agent_finished_admm.future = None
    def agent_measurements(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """method that the agent calls periodically to send its state to the administrator
      """
      raise NotImplementedError()
    agent_measurements.future = None
    def agent_general_use_message(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    agent_general_use_message.future = None


  def beta_create_Admin_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('Admin', 'agent_finished_admm'): ADMMResults.FromString,
      ('Admin', 'agent_general_use_message'): GenericMessage.FromString,
      ('Admin', 'agent_measurements'): Measurements.FromString,
      ('Admin', 'agent_offline'): AgentRequest.FromString,
      ('Admin', 'agent_online'): AgentRequest.FromString,
      ('Admin', 'agent_started_admm'): AgentRequest.FromString,
    }
    response_serializers = {
      ('Admin', 'agent_finished_admm'): CommReply.SerializeToString,
      ('Admin', 'agent_general_use_message'): CommReply.SerializeToString,
      ('Admin', 'agent_measurements'): CommReply.SerializeToString,
      ('Admin', 'agent_offline'): CommReply.SerializeToString,
      ('Admin', 'agent_online'): CommReply.SerializeToString,
      ('Admin', 'agent_started_admm'): CommReply.SerializeToString,
    }
    method_implementations = {
      ('Admin', 'agent_finished_admm'): face_utilities.unary_unary_inline(servicer.agent_finished_admm),
      ('Admin', 'agent_general_use_message'): face_utilities.unary_unary_inline(servicer.agent_general_use_message),
      ('Admin', 'agent_measurements'): face_utilities.unary_unary_inline(servicer.agent_measurements),
      ('Admin', 'agent_offline'): face_utilities.unary_unary_inline(servicer.agent_offline),
      ('Admin', 'agent_online'): face_utilities.unary_unary_inline(servicer.agent_online),
      ('Admin', 'agent_started_admm'): face_utilities.unary_unary_inline(servicer.agent_started_admm),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Admin_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('Admin', 'agent_finished_admm'): ADMMResults.SerializeToString,
      ('Admin', 'agent_general_use_message'): GenericMessage.SerializeToString,
      ('Admin', 'agent_measurements'): Measurements.SerializeToString,
      ('Admin', 'agent_offline'): AgentRequest.SerializeToString,
      ('Admin', 'agent_online'): AgentRequest.SerializeToString,
      ('Admin', 'agent_started_admm'): AgentRequest.SerializeToString,
    }
    response_deserializers = {
      ('Admin', 'agent_finished_admm'): CommReply.FromString,
      ('Admin', 'agent_general_use_message'): CommReply.FromString,
      ('Admin', 'agent_measurements'): CommReply.FromString,
      ('Admin', 'agent_offline'): CommReply.FromString,
      ('Admin', 'agent_online'): CommReply.FromString,
      ('Admin', 'agent_started_admm'): CommReply.FromString,
    }
    cardinalities = {
      'agent_finished_admm': cardinality.Cardinality.UNARY_UNARY,
      'agent_general_use_message': cardinality.Cardinality.UNARY_UNARY,
      'agent_measurements': cardinality.Cardinality.UNARY_UNARY,
      'agent_offline': cardinality.Cardinality.UNARY_UNARY,
      'agent_online': cardinality.Cardinality.UNARY_UNARY,
      'agent_started_admm': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'Admin', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
