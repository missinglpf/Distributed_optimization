# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: admm.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='admm.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\nadmm.proto\">\n\tCommReply\x12 \n\x06status\x18\x01 \x01(\x0e\x32\x10.OperationStatus\x12\x0f\n\x07message\x18\x02 \x01(\t\"\x0e\n\x0c\x45mptyRequest\"[\n\x0eSetBetaRequest\x12\x12\n\nvalue_real\x18\x01 \x01(\x02\x12\x12\n\nvalue_imag\x18\x02 \x01(\x02\x12\x10\n\x08\x61gent_id\x18\x03 \x01(\r\x12\x0f\n\x07\x61\x64mm_it\x18\x04 \x01(\r\"X\n\x0bSetZRequest\x12\x12\n\nvalue_real\x18\x01 \x01(\x02\x12\x12\n\nvalue_imag\x18\x02 \x01(\x02\x12\x10\n\x08\x61gent_id\x18\x03 \x01(\r\x12\x0f\n\x07\x61\x64mm_it\x18\x04 \x01(\r\"H\n\x0cSetX0Request\x12\x12\n\nvalue_real\x18\x01 \x01(\x02\x12\x12\n\nvalue_imag\x18\x02 \x01(\x02\x12\x10\n\x08\x61gent_id\x18\x03 \x01(\r\"\x1e\n\rSetRhoRequest\x12\r\n\x05value\x18\x01 \x01(\x02\"\"\n\x11SetMaxIterRequest\x12\r\n\x05value\x18\x01 \x01(\r\"[\n\x16\x41\x64\x64ToNeighboursRequest\x12\x10\n\x08\x61gent_id\x18\x01 \x01(\r\x12\x10\n\x08\x61gent_ip\x18\x02 \x01(\t\x12\x12\n\nagent_port\x18\x03 \x01(\r\x12\t\n\x01g\x18\x04 \x01(\x02\"&\n\x0cMergeRequest\x12\x16\n\x0e\x63onnect_switch\x18\x01 \x01(\r\"C\n\x12SetCommLinkRequest\x12\x10\n\x08neigh_id\x18\x01 \x01(\r\x12\r\n\x05\x64\x65lay\x18\x02 \x01(\x02\x12\x0c\n\x04loss\x18\x03 \x01(\x02\">\n\x14SetMeasServerRequest\x12\x11\n\tserver_ip\x18\x01 \x01(\t\x12\x13\n\x0bserver_port\x18\x02 \x01(\r**\n\x0fOperationStatus\x12\x0b\n\x07SUCCESS\x10\x00\x12\n\n\x06\x46\x41ILED\x10\x01\x32\xea\x04\n\tADMMAgent\x12)\n\nstart_admm\x12\r.EmptyRequest\x1a\n.CommReply\"\x00\x12\x31\n\x10set_beta_element\x12\x0f.SetBetaRequest\x1a\n.CommReply\"\x00\x12+\n\rset_z_element\x12\x0c.SetZRequest\x1a\n.CommReply\"\x00\x12-\n\x0eset_x0_element\x12\r.SetX0Request\x1a\n.CommReply\"\x00\x12,\n\x0cset_admm_rho\x12\x0e.SetRhoRequest\x1a\n.CommReply\"\x00\x12\x35\n\x11set_admm_max_iter\x12\x12.SetMaxIterRequest\x1a\n.CommReply\"\x00\x12.\n\x0fremote_shutdown\x12\r.EmptyRequest\x1a\n.CommReply\"\x00\x12%\n\x06\x65nable\x12\r.EmptyRequest\x1a\n.CommReply\"\x00\x12$\n\x05merge\x12\r.MergeRequest\x1a\n.CommReply\"\x00\x12\x42\n\x19\x61\x64\x64_me_to_your_neighbours\x12\x17.AddToNeighboursRequest\x1a\n.CommReply\"\x00\x12;\n\x16set_comm_link_to_neigh\x12\x13.SetCommLinkRequest\x1a\n.CommReply\"\x00\x12@\n\x19set_measurement_webserver\x12\x15.SetMeasServerRequest\x1a\n.CommReply\"\x00\x62\x06proto3')
)

_OPERATIONSTATUS = _descriptor.EnumDescriptor(
  name='OperationStatus',
  full_name='OperationStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=685,
  serialized_end=727,
)
_sym_db.RegisterEnumDescriptor(_OPERATIONSTATUS)

OperationStatus = enum_type_wrapper.EnumTypeWrapper(_OPERATIONSTATUS)
SUCCESS = 0
FAILED = 1



_COMMREPLY = _descriptor.Descriptor(
  name='CommReply',
  full_name='CommReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='CommReply.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='CommReply.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14,
  serialized_end=76,
)


_EMPTYREQUEST = _descriptor.Descriptor(
  name='EmptyRequest',
  full_name='EmptyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=78,
  serialized_end=92,
)


_SETBETAREQUEST = _descriptor.Descriptor(
  name='SetBetaRequest',
  full_name='SetBetaRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value_real', full_name='SetBetaRequest.value_real', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_imag', full_name='SetBetaRequest.value_imag', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='SetBetaRequest.agent_id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='admm_it', full_name='SetBetaRequest.admm_it', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=94,
  serialized_end=185,
)


_SETZREQUEST = _descriptor.Descriptor(
  name='SetZRequest',
  full_name='SetZRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value_real', full_name='SetZRequest.value_real', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_imag', full_name='SetZRequest.value_imag', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='SetZRequest.agent_id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='admm_it', full_name='SetZRequest.admm_it', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=187,
  serialized_end=275,
)


_SETX0REQUEST = _descriptor.Descriptor(
  name='SetX0Request',
  full_name='SetX0Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value_real', full_name='SetX0Request.value_real', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_imag', full_name='SetX0Request.value_imag', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='SetX0Request.agent_id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=277,
  serialized_end=349,
)


_SETRHOREQUEST = _descriptor.Descriptor(
  name='SetRhoRequest',
  full_name='SetRhoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='SetRhoRequest.value', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=351,
  serialized_end=381,
)


_SETMAXITERREQUEST = _descriptor.Descriptor(
  name='SetMaxIterRequest',
  full_name='SetMaxIterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='SetMaxIterRequest.value', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=383,
  serialized_end=417,
)


_ADDTONEIGHBOURSREQUEST = _descriptor.Descriptor(
  name='AddToNeighboursRequest',
  full_name='AddToNeighboursRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='AddToNeighboursRequest.agent_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='agent_ip', full_name='AddToNeighboursRequest.agent_ip', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='agent_port', full_name='AddToNeighboursRequest.agent_port', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='g', full_name='AddToNeighboursRequest.g', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=419,
  serialized_end=510,
)


_MERGEREQUEST = _descriptor.Descriptor(
  name='MergeRequest',
  full_name='MergeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='connect_switch', full_name='MergeRequest.connect_switch', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=512,
  serialized_end=550,
)


_SETCOMMLINKREQUEST = _descriptor.Descriptor(
  name='SetCommLinkRequest',
  full_name='SetCommLinkRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='neigh_id', full_name='SetCommLinkRequest.neigh_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delay', full_name='SetCommLinkRequest.delay', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='loss', full_name='SetCommLinkRequest.loss', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=552,
  serialized_end=619,
)


_SETMEASSERVERREQUEST = _descriptor.Descriptor(
  name='SetMeasServerRequest',
  full_name='SetMeasServerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='server_ip', full_name='SetMeasServerRequest.server_ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='server_port', full_name='SetMeasServerRequest.server_port', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=621,
  serialized_end=683,
)

_COMMREPLY.fields_by_name['status'].enum_type = _OPERATIONSTATUS
DESCRIPTOR.message_types_by_name['CommReply'] = _COMMREPLY
DESCRIPTOR.message_types_by_name['EmptyRequest'] = _EMPTYREQUEST
DESCRIPTOR.message_types_by_name['SetBetaRequest'] = _SETBETAREQUEST
DESCRIPTOR.message_types_by_name['SetZRequest'] = _SETZREQUEST
DESCRIPTOR.message_types_by_name['SetX0Request'] = _SETX0REQUEST
DESCRIPTOR.message_types_by_name['SetRhoRequest'] = _SETRHOREQUEST
DESCRIPTOR.message_types_by_name['SetMaxIterRequest'] = _SETMAXITERREQUEST
DESCRIPTOR.message_types_by_name['AddToNeighboursRequest'] = _ADDTONEIGHBOURSREQUEST
DESCRIPTOR.message_types_by_name['MergeRequest'] = _MERGEREQUEST
DESCRIPTOR.message_types_by_name['SetCommLinkRequest'] = _SETCOMMLINKREQUEST
DESCRIPTOR.message_types_by_name['SetMeasServerRequest'] = _SETMEASSERVERREQUEST
DESCRIPTOR.enum_types_by_name['OperationStatus'] = _OPERATIONSTATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CommReply = _reflection.GeneratedProtocolMessageType('CommReply', (_message.Message,), dict(
  DESCRIPTOR = _COMMREPLY,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:CommReply)
  ))
_sym_db.RegisterMessage(CommReply)

EmptyRequest = _reflection.GeneratedProtocolMessageType('EmptyRequest', (_message.Message,), dict(
  DESCRIPTOR = _EMPTYREQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:EmptyRequest)
  ))
_sym_db.RegisterMessage(EmptyRequest)

SetBetaRequest = _reflection.GeneratedProtocolMessageType('SetBetaRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETBETAREQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:SetBetaRequest)
  ))
_sym_db.RegisterMessage(SetBetaRequest)

SetZRequest = _reflection.GeneratedProtocolMessageType('SetZRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETZREQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:SetZRequest)
  ))
_sym_db.RegisterMessage(SetZRequest)

SetX0Request = _reflection.GeneratedProtocolMessageType('SetX0Request', (_message.Message,), dict(
  DESCRIPTOR = _SETX0REQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:SetX0Request)
  ))
_sym_db.RegisterMessage(SetX0Request)

SetRhoRequest = _reflection.GeneratedProtocolMessageType('SetRhoRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETRHOREQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:SetRhoRequest)
  ))
_sym_db.RegisterMessage(SetRhoRequest)

SetMaxIterRequest = _reflection.GeneratedProtocolMessageType('SetMaxIterRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETMAXITERREQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:SetMaxIterRequest)
  ))
_sym_db.RegisterMessage(SetMaxIterRequest)

AddToNeighboursRequest = _reflection.GeneratedProtocolMessageType('AddToNeighboursRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDTONEIGHBOURSREQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:AddToNeighboursRequest)
  ))
_sym_db.RegisterMessage(AddToNeighboursRequest)

MergeRequest = _reflection.GeneratedProtocolMessageType('MergeRequest', (_message.Message,), dict(
  DESCRIPTOR = _MERGEREQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:MergeRequest)
  ))
_sym_db.RegisterMessage(MergeRequest)

SetCommLinkRequest = _reflection.GeneratedProtocolMessageType('SetCommLinkRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETCOMMLINKREQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:SetCommLinkRequest)
  ))
_sym_db.RegisterMessage(SetCommLinkRequest)

SetMeasServerRequest = _reflection.GeneratedProtocolMessageType('SetMeasServerRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETMEASSERVERREQUEST,
  __module__ = 'admm_pb2'
  # @@protoc_insertion_point(class_scope:SetMeasServerRequest)
  ))
_sym_db.RegisterMessage(SetMeasServerRequest)



_ADMMAGENT = _descriptor.ServiceDescriptor(
  name='ADMMAgent',
  full_name='ADMMAgent',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=730,
  serialized_end=1348,
  methods=[
  _descriptor.MethodDescriptor(
    name='start_admm',
    full_name='ADMMAgent.start_admm',
    index=0,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='set_beta_element',
    full_name='ADMMAgent.set_beta_element',
    index=1,
    containing_service=None,
    input_type=_SETBETAREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='set_z_element',
    full_name='ADMMAgent.set_z_element',
    index=2,
    containing_service=None,
    input_type=_SETZREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='set_x0_element',
    full_name='ADMMAgent.set_x0_element',
    index=3,
    containing_service=None,
    input_type=_SETX0REQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='set_admm_rho',
    full_name='ADMMAgent.set_admm_rho',
    index=4,
    containing_service=None,
    input_type=_SETRHOREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='set_admm_max_iter',
    full_name='ADMMAgent.set_admm_max_iter',
    index=5,
    containing_service=None,
    input_type=_SETMAXITERREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='remote_shutdown',
    full_name='ADMMAgent.remote_shutdown',
    index=6,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='enable',
    full_name='ADMMAgent.enable',
    index=7,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='merge',
    full_name='ADMMAgent.merge',
    index=8,
    containing_service=None,
    input_type=_MERGEREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='add_me_to_your_neighbours',
    full_name='ADMMAgent.add_me_to_your_neighbours',
    index=9,
    containing_service=None,
    input_type=_ADDTONEIGHBOURSREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='set_comm_link_to_neigh',
    full_name='ADMMAgent.set_comm_link_to_neigh',
    index=10,
    containing_service=None,
    input_type=_SETCOMMLINKREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='set_measurement_webserver',
    full_name='ADMMAgent.set_measurement_webserver',
    index=11,
    containing_service=None,
    input_type=_SETMEASSERVERREQUEST,
    output_type=_COMMREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ADMMAGENT)

DESCRIPTOR.services_by_name['ADMMAgent'] = _ADMMAGENT

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ADMMAgentStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.start_admm = channel.unary_unary(
          '/ADMMAgent/start_admm',
          request_serializer=EmptyRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.set_beta_element = channel.unary_unary(
          '/ADMMAgent/set_beta_element',
          request_serializer=SetBetaRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.set_z_element = channel.unary_unary(
          '/ADMMAgent/set_z_element',
          request_serializer=SetZRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.set_x0_element = channel.unary_unary(
          '/ADMMAgent/set_x0_element',
          request_serializer=SetX0Request.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.set_admm_rho = channel.unary_unary(
          '/ADMMAgent/set_admm_rho',
          request_serializer=SetRhoRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.set_admm_max_iter = channel.unary_unary(
          '/ADMMAgent/set_admm_max_iter',
          request_serializer=SetMaxIterRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.remote_shutdown = channel.unary_unary(
          '/ADMMAgent/remote_shutdown',
          request_serializer=EmptyRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.enable = channel.unary_unary(
          '/ADMMAgent/enable',
          request_serializer=EmptyRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.merge = channel.unary_unary(
          '/ADMMAgent/merge',
          request_serializer=MergeRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.add_me_to_your_neighbours = channel.unary_unary(
          '/ADMMAgent/add_me_to_your_neighbours',
          request_serializer=AddToNeighboursRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.set_comm_link_to_neigh = channel.unary_unary(
          '/ADMMAgent/set_comm_link_to_neigh',
          request_serializer=SetCommLinkRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )
      self.set_measurement_webserver = channel.unary_unary(
          '/ADMMAgent/set_measurement_webserver',
          request_serializer=SetMeasServerRequest.SerializeToString,
          response_deserializer=CommReply.FromString,
          )


  class ADMMAgentServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def start_admm(self, request, context):
      """start the admm algorithm on the agent
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def set_beta_element(self, request, context):
      """sets a beta value in the ADMM algorithm
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def set_z_element(self, request, context):
      """sets a z value in the ADMM algorithm
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def set_x0_element(self, request, context):
      """sets a x0 value in the ADMM algorithm
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def set_admm_rho(self, request, context):
      """sets the step size rho for the ADMM algorithm
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def set_admm_max_iter(self, request, context):
      """sets the number of iterations the ADMM algorithm
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def remote_shutdown(self, request, context):
      """shuts down the agent
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def enable(self, request, context):
      """enable the agent
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def merge(self, request, context):
      """when a new agent is started after the system, use this function to merge the agent to the rest of the network
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def add_me_to_your_neighbours(self, request, context):
      """when a new agent is started after the system, use this function to register the new agent with its neighbours
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def set_comm_link_to_neigh(self, request, context):
      """adds virtual delay and loss to the communication link towards a neighbour
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def set_measurement_webserver(self, request, context):
      """sets the measurement server to be used by the agent
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ADMMAgentServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'start_admm': grpc.unary_unary_rpc_method_handler(
            servicer.start_admm,
            request_deserializer=EmptyRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'set_beta_element': grpc.unary_unary_rpc_method_handler(
            servicer.set_beta_element,
            request_deserializer=SetBetaRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'set_z_element': grpc.unary_unary_rpc_method_handler(
            servicer.set_z_element,
            request_deserializer=SetZRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'set_x0_element': grpc.unary_unary_rpc_method_handler(
            servicer.set_x0_element,
            request_deserializer=SetX0Request.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'set_admm_rho': grpc.unary_unary_rpc_method_handler(
            servicer.set_admm_rho,
            request_deserializer=SetRhoRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'set_admm_max_iter': grpc.unary_unary_rpc_method_handler(
            servicer.set_admm_max_iter,
            request_deserializer=SetMaxIterRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'remote_shutdown': grpc.unary_unary_rpc_method_handler(
            servicer.remote_shutdown,
            request_deserializer=EmptyRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'enable': grpc.unary_unary_rpc_method_handler(
            servicer.enable,
            request_deserializer=EmptyRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'merge': grpc.unary_unary_rpc_method_handler(
            servicer.merge,
            request_deserializer=MergeRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'add_me_to_your_neighbours': grpc.unary_unary_rpc_method_handler(
            servicer.add_me_to_your_neighbours,
            request_deserializer=AddToNeighboursRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'set_comm_link_to_neigh': grpc.unary_unary_rpc_method_handler(
            servicer.set_comm_link_to_neigh,
            request_deserializer=SetCommLinkRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
        'set_measurement_webserver': grpc.unary_unary_rpc_method_handler(
            servicer.set_measurement_webserver,
            request_deserializer=SetMeasServerRequest.FromString,
            response_serializer=CommReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'ADMMAgent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaADMMAgentServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def start_admm(self, request, context):
      """start the admm algorithm on the agent
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def set_beta_element(self, request, context):
      """sets a beta value in the ADMM algorithm
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def set_z_element(self, request, context):
      """sets a z value in the ADMM algorithm
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def set_x0_element(self, request, context):
      """sets a x0 value in the ADMM algorithm
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def set_admm_rho(self, request, context):
      """sets the step size rho for the ADMM algorithm
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def set_admm_max_iter(self, request, context):
      """sets the number of iterations the ADMM algorithm
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def remote_shutdown(self, request, context):
      """shuts down the agent
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def enable(self, request, context):
      """enable the agent
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def merge(self, request, context):
      """when a new agent is started after the system, use this function to merge the agent to the rest of the network
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def add_me_to_your_neighbours(self, request, context):
      """when a new agent is started after the system, use this function to register the new agent with its neighbours
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def set_comm_link_to_neigh(self, request, context):
      """adds virtual delay and loss to the communication link towards a neighbour
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def set_measurement_webserver(self, request, context):
      """sets the measurement server to be used by the agent
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaADMMAgentStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def start_admm(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """start the admm algorithm on the agent
      """
      raise NotImplementedError()
    start_admm.future = None
    def set_beta_element(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """sets a beta value in the ADMM algorithm
      """
      raise NotImplementedError()
    set_beta_element.future = None
    def set_z_element(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """sets a z value in the ADMM algorithm
      """
      raise NotImplementedError()
    set_z_element.future = None
    def set_x0_element(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """sets a x0 value in the ADMM algorithm
      """
      raise NotImplementedError()
    set_x0_element.future = None
    def set_admm_rho(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """sets the step size rho for the ADMM algorithm
      """
      raise NotImplementedError()
    set_admm_rho.future = None
    def set_admm_max_iter(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """sets the number of iterations the ADMM algorithm
      """
      raise NotImplementedError()
    set_admm_max_iter.future = None
    def remote_shutdown(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """shuts down the agent
      """
      raise NotImplementedError()
    remote_shutdown.future = None
    def enable(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """enable the agent
      """
      raise NotImplementedError()
    enable.future = None
    def merge(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """when a new agent is started after the system, use this function to merge the agent to the rest of the network
      """
      raise NotImplementedError()
    merge.future = None
    def add_me_to_your_neighbours(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """when a new agent is started after the system, use this function to register the new agent with its neighbours
      """
      raise NotImplementedError()
    add_me_to_your_neighbours.future = None
    def set_comm_link_to_neigh(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """adds virtual delay and loss to the communication link towards a neighbour
      """
      raise NotImplementedError()
    set_comm_link_to_neigh.future = None
    def set_measurement_webserver(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """sets the measurement server to be used by the agent
      """
      raise NotImplementedError()
    set_measurement_webserver.future = None


  def beta_create_ADMMAgent_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('ADMMAgent', 'add_me_to_your_neighbours'): AddToNeighboursRequest.FromString,
      ('ADMMAgent', 'enable'): EmptyRequest.FromString,
      ('ADMMAgent', 'merge'): MergeRequest.FromString,
      ('ADMMAgent', 'remote_shutdown'): EmptyRequest.FromString,
      ('ADMMAgent', 'set_admm_max_iter'): SetMaxIterRequest.FromString,
      ('ADMMAgent', 'set_admm_rho'): SetRhoRequest.FromString,
      ('ADMMAgent', 'set_beta_element'): SetBetaRequest.FromString,
      ('ADMMAgent', 'set_comm_link_to_neigh'): SetCommLinkRequest.FromString,
      ('ADMMAgent', 'set_measurement_webserver'): SetMeasServerRequest.FromString,
      ('ADMMAgent', 'set_x0_element'): SetX0Request.FromString,
      ('ADMMAgent', 'set_z_element'): SetZRequest.FromString,
      ('ADMMAgent', 'start_admm'): EmptyRequest.FromString,
    }
    response_serializers = {
      ('ADMMAgent', 'add_me_to_your_neighbours'): CommReply.SerializeToString,
      ('ADMMAgent', 'enable'): CommReply.SerializeToString,
      ('ADMMAgent', 'merge'): CommReply.SerializeToString,
      ('ADMMAgent', 'remote_shutdown'): CommReply.SerializeToString,
      ('ADMMAgent', 'set_admm_max_iter'): CommReply.SerializeToString,
      ('ADMMAgent', 'set_admm_rho'): CommReply.SerializeToString,
      ('ADMMAgent', 'set_beta_element'): CommReply.SerializeToString,
      ('ADMMAgent', 'set_comm_link_to_neigh'): CommReply.SerializeToString,
      ('ADMMAgent', 'set_measurement_webserver'): CommReply.SerializeToString,
      ('ADMMAgent', 'set_x0_element'): CommReply.SerializeToString,
      ('ADMMAgent', 'set_z_element'): CommReply.SerializeToString,
      ('ADMMAgent', 'start_admm'): CommReply.SerializeToString,
    }
    method_implementations = {
      ('ADMMAgent', 'add_me_to_your_neighbours'): face_utilities.unary_unary_inline(servicer.add_me_to_your_neighbours),
      ('ADMMAgent', 'enable'): face_utilities.unary_unary_inline(servicer.enable),
      ('ADMMAgent', 'merge'): face_utilities.unary_unary_inline(servicer.merge),
      ('ADMMAgent', 'remote_shutdown'): face_utilities.unary_unary_inline(servicer.remote_shutdown),
      ('ADMMAgent', 'set_admm_max_iter'): face_utilities.unary_unary_inline(servicer.set_admm_max_iter),
      ('ADMMAgent', 'set_admm_rho'): face_utilities.unary_unary_inline(servicer.set_admm_rho),
      ('ADMMAgent', 'set_beta_element'): face_utilities.unary_unary_inline(servicer.set_beta_element),
      ('ADMMAgent', 'set_comm_link_to_neigh'): face_utilities.unary_unary_inline(servicer.set_comm_link_to_neigh),
      ('ADMMAgent', 'set_measurement_webserver'): face_utilities.unary_unary_inline(servicer.set_measurement_webserver),
      ('ADMMAgent', 'set_x0_element'): face_utilities.unary_unary_inline(servicer.set_x0_element),
      ('ADMMAgent', 'set_z_element'): face_utilities.unary_unary_inline(servicer.set_z_element),
      ('ADMMAgent', 'start_admm'): face_utilities.unary_unary_inline(servicer.start_admm),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ADMMAgent_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('ADMMAgent', 'add_me_to_your_neighbours'): AddToNeighboursRequest.SerializeToString,
      ('ADMMAgent', 'enable'): EmptyRequest.SerializeToString,
      ('ADMMAgent', 'merge'): MergeRequest.SerializeToString,
      ('ADMMAgent', 'remote_shutdown'): EmptyRequest.SerializeToString,
      ('ADMMAgent', 'set_admm_max_iter'): SetMaxIterRequest.SerializeToString,
      ('ADMMAgent', 'set_admm_rho'): SetRhoRequest.SerializeToString,
      ('ADMMAgent', 'set_beta_element'): SetBetaRequest.SerializeToString,
      ('ADMMAgent', 'set_comm_link_to_neigh'): SetCommLinkRequest.SerializeToString,
      ('ADMMAgent', 'set_measurement_webserver'): SetMeasServerRequest.SerializeToString,
      ('ADMMAgent', 'set_x0_element'): SetX0Request.SerializeToString,
      ('ADMMAgent', 'set_z_element'): SetZRequest.SerializeToString,
      ('ADMMAgent', 'start_admm'): EmptyRequest.SerializeToString,
    }
    response_deserializers = {
      ('ADMMAgent', 'add_me_to_your_neighbours'): CommReply.FromString,
      ('ADMMAgent', 'enable'): CommReply.FromString,
      ('ADMMAgent', 'merge'): CommReply.FromString,
      ('ADMMAgent', 'remote_shutdown'): CommReply.FromString,
      ('ADMMAgent', 'set_admm_max_iter'): CommReply.FromString,
      ('ADMMAgent', 'set_admm_rho'): CommReply.FromString,
      ('ADMMAgent', 'set_beta_element'): CommReply.FromString,
      ('ADMMAgent', 'set_comm_link_to_neigh'): CommReply.FromString,
      ('ADMMAgent', 'set_measurement_webserver'): CommReply.FromString,
      ('ADMMAgent', 'set_x0_element'): CommReply.FromString,
      ('ADMMAgent', 'set_z_element'): CommReply.FromString,
      ('ADMMAgent', 'start_admm'): CommReply.FromString,
    }
    cardinalities = {
      'add_me_to_your_neighbours': cardinality.Cardinality.UNARY_UNARY,
      'enable': cardinality.Cardinality.UNARY_UNARY,
      'merge': cardinality.Cardinality.UNARY_UNARY,
      'remote_shutdown': cardinality.Cardinality.UNARY_UNARY,
      'set_admm_max_iter': cardinality.Cardinality.UNARY_UNARY,
      'set_admm_rho': cardinality.Cardinality.UNARY_UNARY,
      'set_beta_element': cardinality.Cardinality.UNARY_UNARY,
      'set_comm_link_to_neigh': cardinality.Cardinality.UNARY_UNARY,
      'set_measurement_webserver': cardinality.Cardinality.UNARY_UNARY,
      'set_x0_element': cardinality.Cardinality.UNARY_UNARY,
      'set_z_element': cardinality.Cardinality.UNARY_UNARY,
      'start_admm': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'ADMMAgent', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
